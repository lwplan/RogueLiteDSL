### YamlMime:ManagedReference
items:
- uid: DSLApp1.Dsl.Tok
  commentId: T:DSLApp1.Dsl.Tok
  id: Tok
  parent: DSLApp1.Dsl
  children:
  - DSLApp1.Dsl.Tok.Ability
  - DSLApp1.Dsl.Tok.Adds
  - DSLApp1.Dsl.Tok.Adjective
  - DSLApp1.Dsl.Tok.Advance
  - DSLApp1.Dsl.Tok.Afterwards
  - DSLApp1.Dsl.Tok.Against
  - DSLApp1.Dsl.Tok.All
  - DSLApp1.Dsl.Tok.Allies
  - DSLApp1.Dsl.Tok.Ally
  - DSLApp1.Dsl.Tok.Applies
  - DSLApp1.Dsl.Tok.Artillery
  - DSLApp1.Dsl.Tok.Attack
  - DSLApp1.Dsl.Tok.Blessing
  - DSLApp1.Dsl.Tok.Bounce
  - DSLApp1.Dsl.Tok.Brute
  - DSLApp1.Dsl.Tok.Buff
  - DSLApp1.Dsl.Tok.Chaos
  - DSLApp1.Dsl.Tok.Charges
  - DSLApp1.Dsl.Tok.Colon
  - DSLApp1.Dsl.Tok.Comma
  - DSLApp1.Dsl.Tok.CoolOff
  - DSLApp1.Dsl.Tok.Crit
  - DSLApp1.Dsl.Tok.Curse
  - DSLApp1.Dsl.Tok.Damage
  - DSLApp1.Dsl.Tok.Dark
  - DSLApp1.Dsl.Tok.Deals
  - DSLApp1.Dsl.Tok.Debuff
  - DSLApp1.Dsl.Tok.Defense
  - DSLApp1.Dsl.Tok.Defensive
  - DSLApp1.Dsl.Tok.Delay
  - DSLApp1.Dsl.Tok.Drains
  - DSLApp1.Dsl.Tok.Electrical
  - DSLApp1.Dsl.Tok.End
  - DSLApp1.Dsl.Tok.Enemies
  - DSLApp1.Dsl.Tok.Enemy
  - DSLApp1.Dsl.Tok.Eq
  - DSLApp1.Dsl.Tok.Execution
  - DSLApp1.Dsl.Tok.Exhaust
  - DSLApp1.Dsl.Tok.ExtraDamage
  - DSLApp1.Dsl.Tok.Fire
  - DSLApp1.Dsl.Tok.For
  - DSLApp1.Dsl.Tok.Frailty
  - DSLApp1.Dsl.Tok.Ge
  - DSLApp1.Dsl.Tok.Gives
  - DSLApp1.Dsl.Tok.Gt
  - DSLApp1.Dsl.Tok.Hits
  - DSLApp1.Dsl.Tok.Holy
  - DSLApp1.Dsl.Tok.Hp
  - DSLApp1.Dsl.Tok.HpPercent
  - DSLApp1.Dsl.Tok.Ice
  - DSLApp1.Dsl.Tok.If
  - DSLApp1.Dsl.Tok.Inflicts
  - DSLApp1.Dsl.Tok.Initiative
  - DSLApp1.Dsl.Tok.Intelligence
  - DSLApp1.Dsl.Tok.Invokes
  - DSLApp1.Dsl.Tok.Kills
  - DSLApp1.Dsl.Tok.LBracket
  - DSLApp1.Dsl.Tok.LParen
  - DSLApp1.Dsl.Tok.LastUp
  - DSLApp1.Dsl.Tok.Le
  - DSLApp1.Dsl.Tok.Light
  - DSLApp1.Dsl.Tok.Lt
  - DSLApp1.Dsl.Tok.Magical
  - DSLApp1.Dsl.Tok.Mana
  - DSLApp1.Dsl.Tok.Miss
  - DSLApp1.Dsl.Tok.Missed
  - DSLApp1.Dsl.Tok.MultiHit
  - DSLApp1.Dsl.Tok.MultiTarget
  - DSLApp1.Dsl.Tok.Multiple
  - DSLApp1.Dsl.Tok.Ne
  - DSLApp1.Dsl.Tok.Neutral
  - DSLApp1.Dsl.Tok.NextUp
  - DSLApp1.Dsl.Tok.Nomad
  - DSLApp1.Dsl.Tok.On
  - DSLApp1.Dsl.Tok.Opportunity
  - DSLApp1.Dsl.Tok.Outfit
  - DSLApp1.Dsl.Tok.Physical
  - DSLApp1.Dsl.Tok.Piercing
  - DSLApp1.Dsl.Tok.Poison
  - DSLApp1.Dsl.Tok.Power
  - DSLApp1.Dsl.Tok.Protection
  - DSLApp1.Dsl.Tok.RBracket
  - DSLApp1.Dsl.Tok.RParen
  - DSLApp1.Dsl.Tok.Random
  - DSLApp1.Dsl.Tok.Resistance
  - DSLApp1.Dsl.Tok.Restores
  - DSLApp1.Dsl.Tok.Revival
  - DSLApp1.Dsl.Tok.Roll
  - DSLApp1.Dsl.Tok.Round
  - DSLApp1.Dsl.Tok.Rounds
  - DSLApp1.Dsl.Tok.Self
  - DSLApp1.Dsl.Tok.Shield
  - DSLApp1.Dsl.Tok.Shuffle
  - DSLApp1.Dsl.Tok.Single
  - DSLApp1.Dsl.Tok.Spiral
  - DSLApp1.Dsl.Tok.Splash
  - DSLApp1.Dsl.Tok.Start
  - DSLApp1.Dsl.Tok.Strongest
  - DSLApp1.Dsl.Tok.Stun
  - DSLApp1.Dsl.Tok.Support
  - DSLApp1.Dsl.Tok.Swap
  - DSLApp1.Dsl.Tok.Takes
  - DSLApp1.Dsl.Tok.Target
  - DSLApp1.Dsl.Tok.Targeting
  - DSLApp1.Dsl.Tok.Then
  - DSLApp1.Dsl.Tok.To
  - DSLApp1.Dsl.Tok.Turn
  - DSLApp1.Dsl.Tok.Turns
  - DSLApp1.Dsl.Tok.User
  - DSLApp1.Dsl.Tok.UserSelected
  - DSLApp1.Dsl.Tok.Vulnerability
  - DSLApp1.Dsl.Tok.Water
  - DSLApp1.Dsl.Tok.Weakest
  - DSLApp1.Dsl.Tok.When
  - DSLApp1.Dsl.Tok.With
  langs:
  - csharp
  - vb
  name: Tok
  nameWithType: Tok
  fullName: DSLApp1.Dsl.Tok
  type: Class
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Tok
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 9
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static class Tok
    content.vb: Public Module Tok
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: DSLApp1.Dsl.Tok.Afterwards
  commentId: F:DSLApp1.Dsl.Tok.Afterwards
  id: Afterwards
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Afterwards
  nameWithType: Tok.Afterwards
  fullName: DSLApp1.Dsl.Tok.Afterwards
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Afterwards
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 19
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Afterwards
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Afterwards As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Ability
  commentId: F:DSLApp1.Dsl.Tok.Ability
  id: Ability
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Ability
  nameWithType: Tok.Ability
  fullName: DSLApp1.Dsl.Tok.Ability
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Ability
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 20
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Ability
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Ability As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Inflicts
  commentId: F:DSLApp1.Dsl.Tok.Inflicts
  id: Inflicts
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Inflicts
  nameWithType: Tok.Inflicts
  fullName: DSLApp1.Dsl.Tok.Inflicts
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Inflicts
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 21
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Inflicts
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Inflicts As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Deals
  commentId: F:DSLApp1.Dsl.Tok.Deals
  id: Deals
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Deals
  nameWithType: Tok.Deals
  fullName: DSLApp1.Dsl.Tok.Deals
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Deals
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 22
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Deals
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Deals As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.With
  commentId: F:DSLApp1.Dsl.Tok.With
  id: With
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: With
  nameWithType: Tok.With
  fullName: DSLApp1.Dsl.Tok.With
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: With
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 23
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> With
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly [With] As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Physical
  commentId: F:DSLApp1.Dsl.Tok.Physical
  id: Physical
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Physical
  nameWithType: Tok.Physical
  fullName: DSLApp1.Dsl.Tok.Physical
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Physical
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 24
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Physical
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Physical As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Damage
  commentId: F:DSLApp1.Dsl.Tok.Damage
  id: Damage
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Damage
  nameWithType: Tok.Damage
  fullName: DSLApp1.Dsl.Tok.Damage
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Damage
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 25
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Damage
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Damage As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.For
  commentId: F:DSLApp1.Dsl.Tok.For
  id: For
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: For
  nameWithType: Tok.For
  fullName: DSLApp1.Dsl.Tok.For
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: For
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 26
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> For
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly [For] As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Charges
  commentId: F:DSLApp1.Dsl.Tok.Charges
  id: Charges
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Charges
  nameWithType: Tok.Charges
  fullName: DSLApp1.Dsl.Tok.Charges
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Charges
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 27
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Charges
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Charges As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Adds
  commentId: F:DSLApp1.Dsl.Tok.Adds
  id: Adds
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Adds
  nameWithType: Tok.Adds
  fullName: DSLApp1.Dsl.Tok.Adds
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Adds
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 28
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Adds
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Adds As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.If
  commentId: F:DSLApp1.Dsl.Tok.If
  id: If
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: If
  nameWithType: Tok.If
  fullName: DSLApp1.Dsl.Tok.If
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: If
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 29
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> If
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly [If] As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Against
  commentId: F:DSLApp1.Dsl.Tok.Against
  id: Against
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Against
  nameWithType: Tok.Against
  fullName: DSLApp1.Dsl.Tok.Against
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Against
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 30
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Against
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Against As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.When
  commentId: F:DSLApp1.Dsl.Tok.When
  id: When
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: When
  nameWithType: Tok.When
  fullName: DSLApp1.Dsl.Tok.When
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: When
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 32
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> When
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly [When] As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Roll
  commentId: F:DSLApp1.Dsl.Tok.Roll
  id: Roll
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Roll
  nameWithType: Tok.Roll
  fullName: DSLApp1.Dsl.Tok.Roll
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Roll
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 33
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Roll
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Roll As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Fire
  commentId: F:DSLApp1.Dsl.Tok.Fire
  id: Fire
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Fire
  nameWithType: Tok.Fire
  fullName: DSLApp1.Dsl.Tok.Fire
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Fire
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 35
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Fire
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Fire As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Poison
  commentId: F:DSLApp1.Dsl.Tok.Poison
  id: Poison
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Poison
  nameWithType: Tok.Poison
  fullName: DSLApp1.Dsl.Tok.Poison
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Poison
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 36
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Poison
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Poison As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Ice
  commentId: F:DSLApp1.Dsl.Tok.Ice
  id: Ice
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Ice
  nameWithType: Tok.Ice
  fullName: DSLApp1.Dsl.Tok.Ice
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Ice
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 37
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Ice
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Ice As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Water
  commentId: F:DSLApp1.Dsl.Tok.Water
  id: Water
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Water
  nameWithType: Tok.Water
  fullName: DSLApp1.Dsl.Tok.Water
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Water
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 38
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Water
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Water As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Dark
  commentId: F:DSLApp1.Dsl.Tok.Dark
  id: Dark
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Dark
  nameWithType: Tok.Dark
  fullName: DSLApp1.Dsl.Tok.Dark
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Dark
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 39
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Dark
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Dark As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Light
  commentId: F:DSLApp1.Dsl.Tok.Light
  id: Light
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Light
  nameWithType: Tok.Light
  fullName: DSLApp1.Dsl.Tok.Light
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Light
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 40
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Light
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Light As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Electrical
  commentId: F:DSLApp1.Dsl.Tok.Electrical
  id: Electrical
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Electrical
  nameWithType: Tok.Electrical
  fullName: DSLApp1.Dsl.Tok.Electrical
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Electrical
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 41
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Electrical
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Electrical As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Then
  commentId: F:DSLApp1.Dsl.Tok.Then
  id: Then
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Then
  nameWithType: Tok.Then
  fullName: DSLApp1.Dsl.Tok.Then
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Then
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 43
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Then
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly [Then] As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Support
  commentId: F:DSLApp1.Dsl.Tok.Support
  id: Support
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Support
  nameWithType: Tok.Support
  fullName: DSLApp1.Dsl.Tok.Support
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Support
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 44
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Support
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Support As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Outfit
  commentId: F:DSLApp1.Dsl.Tok.Outfit
  id: Outfit
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Outfit
  nameWithType: Tok.Outfit
  fullName: DSLApp1.Dsl.Tok.Outfit
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Outfit
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 45
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Outfit
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Outfit As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Spiral
  commentId: F:DSLApp1.Dsl.Tok.Spiral
  id: Spiral
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Spiral
  nameWithType: Tok.Spiral
  fullName: DSLApp1.Dsl.Tok.Spiral
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Spiral
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 46
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Spiral
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Spiral As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Artillery
  commentId: F:DSLApp1.Dsl.Tok.Artillery
  id: Artillery
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Artillery
  nameWithType: Tok.Artillery
  fullName: DSLApp1.Dsl.Tok.Artillery
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Artillery
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 48
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Artillery
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Artillery As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Brute
  commentId: F:DSLApp1.Dsl.Tok.Brute
  id: Brute
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Brute
  nameWithType: Tok.Brute
  fullName: DSLApp1.Dsl.Tok.Brute
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Brute
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 49
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Brute
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Brute As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Nomad
  commentId: F:DSLApp1.Dsl.Tok.Nomad
  id: Nomad
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Nomad
  nameWithType: Tok.Nomad
  fullName: DSLApp1.Dsl.Tok.Nomad
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Nomad
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 50
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Nomad
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Nomad As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Chaos
  commentId: F:DSLApp1.Dsl.Tok.Chaos
  id: Chaos
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Chaos
  nameWithType: Tok.Chaos
  fullName: DSLApp1.Dsl.Tok.Chaos
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Chaos
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 51
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Chaos
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Chaos As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Execution
  commentId: F:DSLApp1.Dsl.Tok.Execution
  id: Execution
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Execution
  nameWithType: Tok.Execution
  fullName: DSLApp1.Dsl.Tok.Execution
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Execution
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 52
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Execution
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Execution As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Holy
  commentId: F:DSLApp1.Dsl.Tok.Holy
  id: Holy
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Holy
  nameWithType: Tok.Holy
  fullName: DSLApp1.Dsl.Tok.Holy
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Holy
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 53
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Holy
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Holy As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Piercing
  commentId: F:DSLApp1.Dsl.Tok.Piercing
  id: Piercing
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Piercing
  nameWithType: Tok.Piercing
  fullName: DSLApp1.Dsl.Tok.Piercing
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Piercing
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 54
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Piercing
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Piercing As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Adjective
  commentId: F:DSLApp1.Dsl.Tok.Adjective
  id: Adjective
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Adjective
  nameWithType: Tok.Adjective
  fullName: DSLApp1.Dsl.Tok.Adjective
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Adjective
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 55
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Adjective
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Adjective As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Self
  commentId: F:DSLApp1.Dsl.Tok.Self
  id: Self
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Self
  nameWithType: Tok.Self
  fullName: DSLApp1.Dsl.Tok.Self
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Self
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 57
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Self
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Self As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Ally
  commentId: F:DSLApp1.Dsl.Tok.Ally
  id: Ally
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Ally
  nameWithType: Tok.Ally
  fullName: DSLApp1.Dsl.Tok.Ally
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Ally
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 58
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Ally
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Ally As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Allies
  commentId: F:DSLApp1.Dsl.Tok.Allies
  id: Allies
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Allies
  nameWithType: Tok.Allies
  fullName: DSLApp1.Dsl.Tok.Allies
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Allies
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 59
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Allies
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Allies As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Enemy
  commentId: F:DSLApp1.Dsl.Tok.Enemy
  id: Enemy
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Enemy
  nameWithType: Tok.Enemy
  fullName: DSLApp1.Dsl.Tok.Enemy
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Enemy
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 60
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Enemy
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Enemy As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Enemies
  commentId: F:DSLApp1.Dsl.Tok.Enemies
  id: Enemies
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Enemies
  nameWithType: Tok.Enemies
  fullName: DSLApp1.Dsl.Tok.Enemies
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Enemies
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 61
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Enemies
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Enemies As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Magical
  commentId: F:DSLApp1.Dsl.Tok.Magical
  id: Magical
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Magical
  nameWithType: Tok.Magical
  fullName: DSLApp1.Dsl.Tok.Magical
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Magical
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 62
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Magical
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Magical As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.To
  commentId: F:DSLApp1.Dsl.Tok.To
  id: To
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: To
  nameWithType: Tok.To
  fullName: DSLApp1.Dsl.Tok.To
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: To
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 63
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> To
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly [To] As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.ExtraDamage
  commentId: F:DSLApp1.Dsl.Tok.ExtraDamage
  id: ExtraDamage
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: ExtraDamage
  nameWithType: Tok.ExtraDamage
  fullName: DSLApp1.Dsl.Tok.ExtraDamage
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: ExtraDamage
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 65
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> ExtraDamage
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly ExtraDamage As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Crit
  commentId: F:DSLApp1.Dsl.Tok.Crit
  id: Crit
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Crit
  nameWithType: Tok.Crit
  fullName: DSLApp1.Dsl.Tok.Crit
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Crit
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 66
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Crit
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Crit As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.MultiHit
  commentId: F:DSLApp1.Dsl.Tok.MultiHit
  id: MultiHit
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: MultiHit
  nameWithType: Tok.MultiHit
  fullName: DSLApp1.Dsl.Tok.MultiHit
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: MultiHit
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 67
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> MultiHit
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly MultiHit As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.MultiTarget
  commentId: F:DSLApp1.Dsl.Tok.MultiTarget
  id: MultiTarget
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: MultiTarget
  nameWithType: Tok.MultiTarget
  fullName: DSLApp1.Dsl.Tok.MultiTarget
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: MultiTarget
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 68
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> MultiTarget
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly MultiTarget As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Random
  commentId: F:DSLApp1.Dsl.Tok.Random
  id: Random
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Random
  nameWithType: Tok.Random
  fullName: DSLApp1.Dsl.Tok.Random
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Random
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 69
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Random
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Random As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Turns
  commentId: F:DSLApp1.Dsl.Tok.Turns
  id: Turns
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Turns
  nameWithType: Tok.Turns
  fullName: DSLApp1.Dsl.Tok.Turns
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Turns
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 71
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Turns
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Turns As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Rounds
  commentId: F:DSLApp1.Dsl.Tok.Rounds
  id: Rounds
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Rounds
  nameWithType: Tok.Rounds
  fullName: DSLApp1.Dsl.Tok.Rounds
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Rounds
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 72
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Rounds
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Rounds As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Turn
  commentId: F:DSLApp1.Dsl.Tok.Turn
  id: Turn
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Turn
  nameWithType: Tok.Turn
  fullName: DSLApp1.Dsl.Tok.Turn
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Turn
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 73
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Turn
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Turn As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Round
  commentId: F:DSLApp1.Dsl.Tok.Round
  id: Round
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Round
  nameWithType: Tok.Round
  fullName: DSLApp1.Dsl.Tok.Round
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Round
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 74
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Round
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Round As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Start
  commentId: F:DSLApp1.Dsl.Tok.Start
  id: Start
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Start
  nameWithType: Tok.Start
  fullName: DSLApp1.Dsl.Tok.Start
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Start
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 75
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Start
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Start As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.End
  commentId: F:DSLApp1.Dsl.Tok.End
  id: End
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: End
  nameWithType: Tok.End
  fullName: DSLApp1.Dsl.Tok.End
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: End
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 76
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> End
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly [End] As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Buff
  commentId: F:DSLApp1.Dsl.Tok.Buff
  id: Buff
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Buff
  nameWithType: Tok.Buff
  fullName: DSLApp1.Dsl.Tok.Buff
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Buff
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 78
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Buff
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Buff As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Debuff
  commentId: F:DSLApp1.Dsl.Tok.Debuff
  id: Debuff
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Debuff
  nameWithType: Tok.Debuff
  fullName: DSLApp1.Dsl.Tok.Debuff
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Debuff
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 79
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Debuff
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Debuff As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Vulnerability
  commentId: F:DSLApp1.Dsl.Tok.Vulnerability
  id: Vulnerability
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Vulnerability
  nameWithType: Tok.Vulnerability
  fullName: DSLApp1.Dsl.Tok.Vulnerability
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Vulnerability
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 82
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Vulnerability
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Vulnerability As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Protection
  commentId: F:DSLApp1.Dsl.Tok.Protection
  id: Protection
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Protection
  nameWithType: Tok.Protection
  fullName: DSLApp1.Dsl.Tok.Protection
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Protection
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 83
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Protection
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Protection As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Power
  commentId: F:DSLApp1.Dsl.Tok.Power
  id: Power
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Power
  nameWithType: Tok.Power
  fullName: DSLApp1.Dsl.Tok.Power
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Power
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 84
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Power
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Power As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Frailty
  commentId: F:DSLApp1.Dsl.Tok.Frailty
  id: Frailty
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Frailty
  nameWithType: Tok.Frailty
  fullName: DSLApp1.Dsl.Tok.Frailty
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Frailty
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 85
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Frailty
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Frailty As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Blessing
  commentId: F:DSLApp1.Dsl.Tok.Blessing
  id: Blessing
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Blessing
  nameWithType: Tok.Blessing
  fullName: DSLApp1.Dsl.Tok.Blessing
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Blessing
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 87
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Blessing
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Blessing As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Curse
  commentId: F:DSLApp1.Dsl.Tok.Curse
  id: Curse
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Curse
  nameWithType: Tok.Curse
  fullName: DSLApp1.Dsl.Tok.Curse
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Curse
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 88
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Curse
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Curse As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Stun
  commentId: F:DSLApp1.Dsl.Tok.Stun
  id: Stun
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Stun
  nameWithType: Tok.Stun
  fullName: DSLApp1.Dsl.Tok.Stun
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Stun
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 89
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Stun
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Stun As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Defensive
  commentId: F:DSLApp1.Dsl.Tok.Defensive
  id: Defensive
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Defensive
  nameWithType: Tok.Defensive
  fullName: DSLApp1.Dsl.Tok.Defensive
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Defensive
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 90
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Defensive
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Defensive As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Revival
  commentId: F:DSLApp1.Dsl.Tok.Revival
  id: Revival
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Revival
  nameWithType: Tok.Revival
  fullName: DSLApp1.Dsl.Tok.Revival
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Revival
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 91
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Revival
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Revival As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Shield
  commentId: F:DSLApp1.Dsl.Tok.Shield
  id: Shield
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Shield
  nameWithType: Tok.Shield
  fullName: DSLApp1.Dsl.Tok.Shield
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Shield
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 92
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Shield
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Shield As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Bounce
  commentId: F:DSLApp1.Dsl.Tok.Bounce
  id: Bounce
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Bounce
  nameWithType: Tok.Bounce
  fullName: DSLApp1.Dsl.Tok.Bounce
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Bounce
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 94
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Bounce
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Bounce As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Splash
  commentId: F:DSLApp1.Dsl.Tok.Splash
  id: Splash
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Splash
  nameWithType: Tok.Splash
  fullName: DSLApp1.Dsl.Tok.Splash
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Splash
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 95
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Splash
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Splash As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Exhaust
  commentId: F:DSLApp1.Dsl.Tok.Exhaust
  id: Exhaust
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Exhaust
  nameWithType: Tok.Exhaust
  fullName: DSLApp1.Dsl.Tok.Exhaust
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Exhaust
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 96
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Exhaust
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Exhaust As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.CoolOff
  commentId: F:DSLApp1.Dsl.Tok.CoolOff
  id: CoolOff
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: CoolOff
  nameWithType: Tok.CoolOff
  fullName: DSLApp1.Dsl.Tok.CoolOff
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: CoolOff
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 97
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> CoolOff
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly CoolOff As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Invokes
  commentId: F:DSLApp1.Dsl.Tok.Invokes
  id: Invokes
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Invokes
  nameWithType: Tok.Invokes
  fullName: DSLApp1.Dsl.Tok.Invokes
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Invokes
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 99
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Invokes
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Invokes As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Delay
  commentId: F:DSLApp1.Dsl.Tok.Delay
  id: Delay
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Delay
  nameWithType: Tok.Delay
  fullName: DSLApp1.Dsl.Tok.Delay
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Delay
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 100
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Delay
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Delay As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Advance
  commentId: F:DSLApp1.Dsl.Tok.Advance
  id: Advance
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Advance
  nameWithType: Tok.Advance
  fullName: DSLApp1.Dsl.Tok.Advance
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Advance
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 101
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Advance
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Advance As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Swap
  commentId: F:DSLApp1.Dsl.Tok.Swap
  id: Swap
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Swap
  nameWithType: Tok.Swap
  fullName: DSLApp1.Dsl.Tok.Swap
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Swap
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 102
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Swap
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Swap As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Shuffle
  commentId: F:DSLApp1.Dsl.Tok.Shuffle
  id: Shuffle
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Shuffle
  nameWithType: Tok.Shuffle
  fullName: DSLApp1.Dsl.Tok.Shuffle
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Shuffle
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 103
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Shuffle
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Shuffle As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.All
  commentId: F:DSLApp1.Dsl.Tok.All
  id: All
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: All
  nameWithType: Tok.All
  fullName: DSLApp1.Dsl.Tok.All
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: All
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 105
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> All
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly All As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Miss
  commentId: F:DSLApp1.Dsl.Tok.Miss
  id: Miss
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Miss
  nameWithType: Tok.Miss
  fullName: DSLApp1.Dsl.Tok.Miss
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Miss
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 107
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Miss
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Miss As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Attack
  commentId: F:DSLApp1.Dsl.Tok.Attack
  id: Attack
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Attack
  nameWithType: Tok.Attack
  fullName: DSLApp1.Dsl.Tok.Attack
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Attack
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 109
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Attack
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Attack As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Defense
  commentId: F:DSLApp1.Dsl.Tok.Defense
  id: Defense
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Defense
  nameWithType: Tok.Defense
  fullName: DSLApp1.Dsl.Tok.Defense
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Defense
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 110
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Defense
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Defense As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Intelligence
  commentId: F:DSLApp1.Dsl.Tok.Intelligence
  id: Intelligence
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Intelligence
  nameWithType: Tok.Intelligence
  fullName: DSLApp1.Dsl.Tok.Intelligence
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Intelligence
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 111
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Intelligence
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Intelligence As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Resistance
  commentId: F:DSLApp1.Dsl.Tok.Resistance
  id: Resistance
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Resistance
  nameWithType: Tok.Resistance
  fullName: DSLApp1.Dsl.Tok.Resistance
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Resistance
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 112
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Resistance
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Resistance As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Initiative
  commentId: F:DSLApp1.Dsl.Tok.Initiative
  id: Initiative
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Initiative
  nameWithType: Tok.Initiative
  fullName: DSLApp1.Dsl.Tok.Initiative
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Initiative
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 113
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Initiative
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Initiative As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Applies
  commentId: F:DSLApp1.Dsl.Tok.Applies
  id: Applies
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Applies
  nameWithType: Tok.Applies
  fullName: DSLApp1.Dsl.Tok.Applies
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Applies
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 115
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Applies
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Applies As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Mana
  commentId: F:DSLApp1.Dsl.Tok.Mana
  id: Mana
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Mana
  nameWithType: Tok.Mana
  fullName: DSLApp1.Dsl.Tok.Mana
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Mana
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 119
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Mana
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Mana As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Hp
  commentId: F:DSLApp1.Dsl.Tok.Hp
  id: Hp
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Hp
  nameWithType: Tok.Hp
  fullName: DSLApp1.Dsl.Tok.Hp
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Hp
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 120
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Hp
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Hp As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.HpPercent
  commentId: F:DSLApp1.Dsl.Tok.HpPercent
  id: HpPercent
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: HpPercent
  nameWithType: Tok.HpPercent
  fullName: DSLApp1.Dsl.Tok.HpPercent
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: HpPercent
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 121
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> HpPercent
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly HpPercent As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Opportunity
  commentId: F:DSLApp1.Dsl.Tok.Opportunity
  id: Opportunity
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Opportunity
  nameWithType: Tok.Opportunity
  fullName: DSLApp1.Dsl.Tok.Opportunity
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Opportunity
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 122
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Opportunity
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Opportunity As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.User
  commentId: F:DSLApp1.Dsl.Tok.User
  id: User
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: User
  nameWithType: Tok.User
  fullName: DSLApp1.Dsl.Tok.User
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: User
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 124
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> User
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly User As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Target
  commentId: F:DSLApp1.Dsl.Tok.Target
  id: Target
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: Tok.Target
  fullName: DSLApp1.Dsl.Tok.Target
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Target
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 125
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Target
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Target As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Missed
  commentId: F:DSLApp1.Dsl.Tok.Missed
  id: Missed
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Missed
  nameWithType: Tok.Missed
  fullName: DSLApp1.Dsl.Tok.Missed
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Missed
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 126
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Missed
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Missed As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Kills
  commentId: F:DSLApp1.Dsl.Tok.Kills
  id: Kills
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Kills
  nameWithType: Tok.Kills
  fullName: DSLApp1.Dsl.Tok.Kills
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Kills
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 127
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Kills
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Kills As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Hits
  commentId: F:DSLApp1.Dsl.Tok.Hits
  id: Hits
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Hits
  nameWithType: Tok.Hits
  fullName: DSLApp1.Dsl.Tok.Hits
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Hits
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 128
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Hits
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Hits As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.On
  commentId: F:DSLApp1.Dsl.Tok.On
  id: On
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: On
  nameWithType: Tok.On
  fullName: DSLApp1.Dsl.Tok.On
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: On
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 129
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> On
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly [On] As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Restores
  commentId: F:DSLApp1.Dsl.Tok.Restores
  id: Restores
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Restores
  nameWithType: Tok.Restores
  fullName: DSLApp1.Dsl.Tok.Restores
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Restores
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 131
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Restores
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Restores As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Drains
  commentId: F:DSLApp1.Dsl.Tok.Drains
  id: Drains
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Drains
  nameWithType: Tok.Drains
  fullName: DSLApp1.Dsl.Tok.Drains
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Drains
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 132
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Drains
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Drains As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Gives
  commentId: F:DSLApp1.Dsl.Tok.Gives
  id: Gives
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Gives
  nameWithType: Tok.Gives
  fullName: DSLApp1.Dsl.Tok.Gives
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Gives
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 133
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Gives
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Gives As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Takes
  commentId: F:DSLApp1.Dsl.Tok.Takes
  id: Takes
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Takes
  nameWithType: Tok.Takes
  fullName: DSLApp1.Dsl.Tok.Takes
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Takes
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 134
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Takes
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Takes As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Targeting
  commentId: F:DSLApp1.Dsl.Tok.Targeting
  id: Targeting
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Targeting
  nameWithType: Tok.Targeting
  fullName: DSLApp1.Dsl.Tok.Targeting
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Targeting
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 137
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Targeting
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Targeting As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.UserSelected
  commentId: F:DSLApp1.Dsl.Tok.UserSelected
  id: UserSelected
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: UserSelected
  nameWithType: Tok.UserSelected
  fullName: DSLApp1.Dsl.Tok.UserSelected
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: UserSelected
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 138
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> UserSelected
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly UserSelected As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Neutral
  commentId: F:DSLApp1.Dsl.Tok.Neutral
  id: Neutral
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Neutral
  nameWithType: Tok.Neutral
  fullName: DSLApp1.Dsl.Tok.Neutral
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Neutral
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 140
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Neutral
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Neutral As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Strongest
  commentId: F:DSLApp1.Dsl.Tok.Strongest
  id: Strongest
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Strongest
  nameWithType: Tok.Strongest
  fullName: DSLApp1.Dsl.Tok.Strongest
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Strongest
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 142
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Strongest
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Strongest As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Weakest
  commentId: F:DSLApp1.Dsl.Tok.Weakest
  id: Weakest
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Weakest
  nameWithType: Tok.Weakest
  fullName: DSLApp1.Dsl.Tok.Weakest
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Weakest
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 143
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Weakest
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Weakest As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.NextUp
  commentId: F:DSLApp1.Dsl.Tok.NextUp
  id: NextUp
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: NextUp
  nameWithType: Tok.NextUp
  fullName: DSLApp1.Dsl.Tok.NextUp
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: NextUp
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 144
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> NextUp
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly NextUp As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.LastUp
  commentId: F:DSLApp1.Dsl.Tok.LastUp
  id: LastUp
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: LastUp
  nameWithType: Tok.LastUp
  fullName: DSLApp1.Dsl.Tok.LastUp
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: LastUp
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 145
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> LastUp
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly LastUp As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Single
  commentId: F:DSLApp1.Dsl.Tok.Single
  id: Single
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Single
  nameWithType: Tok.Single
  fullName: DSLApp1.Dsl.Tok.Single
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Single
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 148
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Single
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly [Single] As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Multiple
  commentId: F:DSLApp1.Dsl.Tok.Multiple
  id: Multiple
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Multiple
  nameWithType: Tok.Multiple
  fullName: DSLApp1.Dsl.Tok.Multiple
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Multiple
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 151
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Multiple
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Multiple As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Comma
  commentId: F:DSLApp1.Dsl.Tok.Comma
  id: Comma
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Comma
  nameWithType: Tok.Comma
  fullName: DSLApp1.Dsl.Tok.Comma
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Comma
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 155
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Comma
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Comma As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Eq
  commentId: F:DSLApp1.Dsl.Tok.Eq
  id: Eq
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Eq
  nameWithType: Tok.Eq
  fullName: DSLApp1.Dsl.Tok.Eq
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Eq
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 156
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Eq
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Eq As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Ne
  commentId: F:DSLApp1.Dsl.Tok.Ne
  id: Ne
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Ne
  nameWithType: Tok.Ne
  fullName: DSLApp1.Dsl.Tok.Ne
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Ne
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 157
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Ne
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Ne As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Le
  commentId: F:DSLApp1.Dsl.Tok.Le
  id: Le
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Le
  nameWithType: Tok.Le
  fullName: DSLApp1.Dsl.Tok.Le
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Le
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 158
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Le
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Le As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Ge
  commentId: F:DSLApp1.Dsl.Tok.Ge
  id: Ge
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Ge
  nameWithType: Tok.Ge
  fullName: DSLApp1.Dsl.Tok.Ge
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Ge
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 159
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Ge
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Ge As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Lt
  commentId: F:DSLApp1.Dsl.Tok.Lt
  id: Lt
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Lt
  nameWithType: Tok.Lt
  fullName: DSLApp1.Dsl.Tok.Lt
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Lt
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 160
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Lt
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Lt As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Gt
  commentId: F:DSLApp1.Dsl.Tok.Gt
  id: Gt
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Gt
  nameWithType: Tok.Gt
  fullName: DSLApp1.Dsl.Tok.Gt
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Gt
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 161
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Gt
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Gt As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.LParen
  commentId: F:DSLApp1.Dsl.Tok.LParen
  id: LParen
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: LParen
  nameWithType: Tok.LParen
  fullName: DSLApp1.Dsl.Tok.LParen
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: LParen
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 162
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> LParen
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly LParen As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.RParen
  commentId: F:DSLApp1.Dsl.Tok.RParen
  id: RParen
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: RParen
  nameWithType: Tok.RParen
  fullName: DSLApp1.Dsl.Tok.RParen
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: RParen
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 163
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> RParen
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly RParen As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.Colon
  commentId: F:DSLApp1.Dsl.Tok.Colon
  id: Colon
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: Colon
  nameWithType: Tok.Colon
  fullName: DSLApp1.Dsl.Tok.Colon
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Colon
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 164
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> Colon
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly Colon As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.LBracket
  commentId: F:DSLApp1.Dsl.Tok.LBracket
  id: LBracket
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: LBracket
  nameWithType: Tok.LBracket
  fullName: DSLApp1.Dsl.Tok.LBracket
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: LBracket
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 165
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> LBracket
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly LBracket As Parser(Of Token, Token)
- uid: DSLApp1.Dsl.Tok.RBracket
  commentId: F:DSLApp1.Dsl.Tok.RBracket
  id: RBracket
  parent: DSLApp1.Dsl.Tok
  langs:
  - csharp
  - vb
  name: RBracket
  nameWithType: Tok.RBracket
  fullName: DSLApp1.Dsl.Tok.RBracket
  type: Field
  source:
    remote:
      path: src/Dsl/DSLParser.Tok.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: RBracket
    path: src/Dsl/DSLParser.Tok.cs
    startLine: 166
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Dsl
  syntax:
    content: public static readonly Parser<Token, Token> RBracket
    return:
      type: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
    content.vb: Public Shared ReadOnly RBracket As Parser(Of Token, Token)
references:
- uid: DSLApp1.Dsl
  commentId: N:DSLApp1.Dsl
  href: DSLApp1.html
  name: DSLApp1.Dsl
  nameWithType: DSLApp1.Dsl
  fullName: DSLApp1.Dsl
  spec.csharp:
  - uid: DSLApp1
    name: DSLApp1
    href: DSLApp1.html
  - name: .
  - uid: DSLApp1.Dsl
    name: Dsl
    href: DSLApp1.Dsl.html
  spec.vb:
  - uid: DSLApp1
    name: DSLApp1
    href: DSLApp1.html
  - name: .
  - uid: DSLApp1.Dsl
    name: Dsl
    href: DSLApp1.Dsl.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
  commentId: T:Pidgin.Parser{DSLApp1.Dsl.Token,DSLApp1.Dsl.Token}
  parent: Pidgin
  definition: Pidgin.Parser`2
  href: DSLApp1.Dsl.Token.html
  name: Parser<Token, Token>
  nameWithType: Parser<Token, Token>
  fullName: Pidgin.Parser<DSLApp1.Dsl.Token, DSLApp1.Dsl.Token>
  nameWithType.vb: Parser(Of Token, Token)
  fullName.vb: Pidgin.Parser(Of DSLApp1.Dsl.Token, DSLApp1.Dsl.Token)
  name.vb: Parser(Of Token, Token)
  spec.csharp:
  - uid: Pidgin.Parser`2
    name: Parser
    isExternal: true
  - name: <
  - uid: DSLApp1.Dsl.Token
    name: Token
    href: DSLApp1.Dsl.Token.html
  - name: ','
  - name: " "
  - uid: DSLApp1.Dsl.Token
    name: Token
    href: DSLApp1.Dsl.Token.html
  - name: '>'
  spec.vb:
  - uid: Pidgin.Parser`2
    name: Parser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: DSLApp1.Dsl.Token
    name: Token
    href: DSLApp1.Dsl.Token.html
  - name: ','
  - name: " "
  - uid: DSLApp1.Dsl.Token
    name: Token
    href: DSLApp1.Dsl.Token.html
  - name: )
- uid: Pidgin.Parser`2
  commentId: T:Pidgin.Parser`2
  isExternal: true
  name: Parser<TToken, T>
  nameWithType: Parser<TToken, T>
  fullName: Pidgin.Parser<TToken, T>
  nameWithType.vb: Parser(Of TToken, T)
  fullName.vb: Pidgin.Parser(Of TToken, T)
  name.vb: Parser(Of TToken, T)
  spec.csharp:
  - uid: Pidgin.Parser`2
    name: Parser
    isExternal: true
  - name: <
  - name: TToken
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: Pidgin.Parser`2
    name: Parser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TToken
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Pidgin
  commentId: N:Pidgin
  isExternal: true
  name: Pidgin
  nameWithType: Pidgin
  fullName: Pidgin
