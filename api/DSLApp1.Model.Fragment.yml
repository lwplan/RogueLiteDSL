### YamlMime:ManagedReference
items:
- uid: DSLApp1.Model.Fragment
  commentId: T:DSLApp1.Model.Fragment
  id: Fragment
  parent: DSLApp1.Model
  children:
  - DSLApp1.Model.Fragment.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  - DSLApp1.Model.Fragment.Ability
  - DSLApp1.Model.Fragment.Description
  - DSLApp1.Model.Fragment.Equips
  - DSLApp1.Model.Fragment.Exclusivities
  - DSLApp1.Model.Fragment.HasAbility
  - DSLApp1.Model.Fragment.HexSignature
  - DSLApp1.Model.Fragment.Name
  - DSLApp1.Model.Fragment.Rarity
  - DSLApp1.Model.Fragment.Unlocked
  langs:
  - csharp
  - vb
  name: Fragment
  nameWithType: Fragment
  fullName: DSLApp1.Model.Fragment
  type: Class
  source:
    remote:
      path: src/Model/Fragment.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Fragment
    path: src/Model/Fragment.cs
    startLine: 7
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Model
  syntax:
    content: >-
      [Serializable]

      public class Fragment
    content.vb: >-
      <Serializable>

      Public Class Fragment
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: DSLApp1.Model.Fragment.Unlocked
  commentId: P:DSLApp1.Model.Fragment.Unlocked
  id: Unlocked
  parent: DSLApp1.Model.Fragment
  langs:
  - csharp
  - vb
  name: Unlocked
  nameWithType: Fragment.Unlocked
  fullName: DSLApp1.Model.Fragment.Unlocked
  type: Property
  source:
    remote:
      path: src/Model/Fragment.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Unlocked
    path: src/Model/Fragment.cs
    startLine: 10
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Model
  syntax:
    content: public bool Unlocked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Unlocked As Boolean
  overload: DSLApp1.Model.Fragment.Unlocked*
- uid: DSLApp1.Model.Fragment.Name
  commentId: P:DSLApp1.Model.Fragment.Name
  id: Name
  parent: DSLApp1.Model.Fragment
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Fragment.Name
  fullName: DSLApp1.Model.Fragment.Name
  type: Property
  source:
    remote:
      path: src/Model/Fragment.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Name
    path: src/Model/Fragment.cs
    startLine: 11
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Model
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: DSLApp1.Model.Fragment.Name*
- uid: DSLApp1.Model.Fragment.Description
  commentId: P:DSLApp1.Model.Fragment.Description
  id: Description
  parent: DSLApp1.Model.Fragment
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Fragment.Description
  fullName: DSLApp1.Model.Fragment.Description
  type: Property
  source:
    remote:
      path: src/Model/Fragment.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Description
    path: src/Model/Fragment.cs
    startLine: 12
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Model
  syntax:
    content: public string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: DSLApp1.Model.Fragment.Description*
- uid: DSLApp1.Model.Fragment.HexSignature
  commentId: P:DSLApp1.Model.Fragment.HexSignature
  id: HexSignature
  parent: DSLApp1.Model.Fragment
  langs:
  - csharp
  - vb
  name: HexSignature
  nameWithType: Fragment.HexSignature
  fullName: DSLApp1.Model.Fragment.HexSignature
  type: Property
  source:
    remote:
      path: src/Model/Fragment.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: HexSignature
    path: src/Model/Fragment.cs
    startLine: 13
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Model
  syntax:
    content: public string HexSignature { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property HexSignature As String
  overload: DSLApp1.Model.Fragment.HexSignature*
- uid: DSLApp1.Model.Fragment.Rarity
  commentId: P:DSLApp1.Model.Fragment.Rarity
  id: Rarity
  parent: DSLApp1.Model.Fragment
  langs:
  - csharp
  - vb
  name: Rarity
  nameWithType: Fragment.Rarity
  fullName: DSLApp1.Model.Fragment.Rarity
  type: Property
  source:
    remote:
      path: src/Model/Fragment.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Rarity
    path: src/Model/Fragment.cs
    startLine: 15
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Model
  syntax:
    content: public Rarity Rarity { get; }
    parameters: []
    return:
      type: DSLApp1.Model.Rarity
    content.vb: Public Property Rarity As Rarity
  overload: DSLApp1.Model.Fragment.Rarity*
- uid: DSLApp1.Model.Fragment.Exclusivities
  commentId: P:DSLApp1.Model.Fragment.Exclusivities
  id: Exclusivities
  parent: DSLApp1.Model.Fragment
  langs:
  - csharp
  - vb
  name: Exclusivities
  nameWithType: Fragment.Exclusivities
  fullName: DSLApp1.Model.Fragment.Exclusivities
  type: Property
  source:
    remote:
      path: src/Model/Fragment.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Exclusivities
    path: src/Model/Fragment.cs
    startLine: 17
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Model
  syntax:
    content: public List<Exclusivity> Exclusivities { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{DSLApp1.Model.Exclusivity}
    content.vb: Public Property Exclusivities As List(Of Exclusivity)
  overload: DSLApp1.Model.Fragment.Exclusivities*
- uid: DSLApp1.Model.Fragment.Equips
  commentId: P:DSLApp1.Model.Fragment.Equips
  id: Equips
  parent: DSLApp1.Model.Fragment
  langs:
  - csharp
  - vb
  name: Equips
  nameWithType: Fragment.Equips
  fullName: DSLApp1.Model.Fragment.Equips
  type: Property
  source:
    remote:
      path: src/Model/Fragment.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Equips
    path: src/Model/Fragment.cs
    startLine: 19
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Model
  syntax:
    content: public List<IModifier> Equips { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{DSLApp1.Model.IModifier}
    content.vb: Public ReadOnly Property Equips As List(Of IModifier)
  overload: DSLApp1.Model.Fragment.Equips*
- uid: DSLApp1.Model.Fragment.HasAbility
  commentId: P:DSLApp1.Model.Fragment.HasAbility
  id: HasAbility
  parent: DSLApp1.Model.Fragment
  langs:
  - csharp
  - vb
  name: HasAbility
  nameWithType: Fragment.HasAbility
  fullName: DSLApp1.Model.Fragment.HasAbility
  type: Property
  source:
    remote:
      path: src/Model/Fragment.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: HasAbility
    path: src/Model/Fragment.cs
    startLine: 20
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Model
  syntax:
    content: public bool HasAbility { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasAbility As Boolean
  overload: DSLApp1.Model.Fragment.HasAbility*
- uid: DSLApp1.Model.Fragment.Ability
  commentId: P:DSLApp1.Model.Fragment.Ability
  id: Ability
  parent: DSLApp1.Model.Fragment
  langs:
  - csharp
  - vb
  name: Ability
  nameWithType: Fragment.Ability
  fullName: DSLApp1.Model.Fragment.Ability
  type: Property
  source:
    remote:
      path: src/Model/Fragment.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: Ability
    path: src/Model/Fragment.cs
    startLine: 21
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Model
  syntax:
    content: public IAbility Ability { get; }
    parameters: []
    return:
      type: DSLApp1.Model.IAbility
    content.vb: Public ReadOnly Property Ability As IAbility
  overload: DSLApp1.Model.Fragment.Ability*
- uid: DSLApp1.Model.Fragment.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:DSLApp1.Model.Fragment.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)'
  parent: DSLApp1.Model.Fragment
  langs:
  - csharp
  - vb
  name: Fragment(string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string)
  nameWithType: Fragment.Fragment(string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string)
  fullName: DSLApp1.Model.Fragment.Fragment(string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string)
  type: Constructor
  source:
    remote:
      path: src/Model/Fragment.cs
      branch: main
      repo: git@github.com:lwplan/RogueLiteDSL.git
    id: .ctor
    path: src/Model/Fragment.cs
    startLine: 23
  assemblies:
  - DSLApp1
  namespace: DSLApp1.Model
  syntax:
    content: public Fragment(string name, string description, string hexSignature, string elementString, string rarity, string exclusivities, string levelString, string opportunityPotString, string manaCostString, string riskString, string targetabilityString, string equips, string deals, string applies, string animation, string damageEffect, string castEffect)
    parameters:
    - id: name
      type: System.String
    - id: description
      type: System.String
    - id: hexSignature
      type: System.String
    - id: elementString
      type: System.String
    - id: rarity
      type: System.String
    - id: exclusivities
      type: System.String
    - id: levelString
      type: System.String
    - id: opportunityPotString
      type: System.String
    - id: manaCostString
      type: System.String
    - id: riskString
      type: System.String
    - id: targetabilityString
      type: System.String
    - id: equips
      type: System.String
    - id: deals
      type: System.String
    - id: applies
      type: System.String
    - id: animation
      type: System.String
    - id: damageEffect
      type: System.String
    - id: castEffect
      type: System.String
    content.vb: Public Sub New(name As String, description As String, hexSignature As String, elementString As String, rarity As String, exclusivities As String, levelString As String, opportunityPotString As String, manaCostString As String, riskString As String, targetabilityString As String, equips As String, deals As String, applies As String, animation As String, damageEffect As String, castEffect As String)
  overload: DSLApp1.Model.Fragment.#ctor*
  nameWithType.vb: Fragment.New(String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String)
  fullName.vb: DSLApp1.Model.Fragment.New(String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String)
  name.vb: New(String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String)
references:
- uid: DSLApp1.Model
  commentId: N:DSLApp1.Model
  href: DSLApp1.html
  name: DSLApp1.Model
  nameWithType: DSLApp1.Model
  fullName: DSLApp1.Model
  spec.csharp:
  - uid: DSLApp1
    name: DSLApp1
    href: DSLApp1.html
  - name: .
  - uid: DSLApp1.Model
    name: Model
    href: DSLApp1.Model.html
  spec.vb:
  - uid: DSLApp1
    name: DSLApp1
    href: DSLApp1.html
  - name: .
  - uid: DSLApp1.Model
    name: Model
    href: DSLApp1.Model.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: DSLApp1.Model.Fragment.Unlocked*
  commentId: Overload:DSLApp1.Model.Fragment.Unlocked
  href: DSLApp1.Model.Fragment.html#DSLApp1_Model_Fragment_Unlocked
  name: Unlocked
  nameWithType: Fragment.Unlocked
  fullName: DSLApp1.Model.Fragment.Unlocked
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: DSLApp1.Model.Fragment.Name*
  commentId: Overload:DSLApp1.Model.Fragment.Name
  href: DSLApp1.Model.Fragment.html#DSLApp1_Model_Fragment_Name
  name: Name
  nameWithType: Fragment.Name
  fullName: DSLApp1.Model.Fragment.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: DSLApp1.Model.Fragment.Description*
  commentId: Overload:DSLApp1.Model.Fragment.Description
  href: DSLApp1.Model.Fragment.html#DSLApp1_Model_Fragment_Description
  name: Description
  nameWithType: Fragment.Description
  fullName: DSLApp1.Model.Fragment.Description
- uid: DSLApp1.Model.Fragment.HexSignature*
  commentId: Overload:DSLApp1.Model.Fragment.HexSignature
  href: DSLApp1.Model.Fragment.html#DSLApp1_Model_Fragment_HexSignature
  name: HexSignature
  nameWithType: Fragment.HexSignature
  fullName: DSLApp1.Model.Fragment.HexSignature
- uid: DSLApp1.Model.Fragment.Rarity*
  commentId: Overload:DSLApp1.Model.Fragment.Rarity
  href: DSLApp1.Model.Fragment.html#DSLApp1_Model_Fragment_Rarity
  name: Rarity
  nameWithType: Fragment.Rarity
  fullName: DSLApp1.Model.Fragment.Rarity
- uid: DSLApp1.Model.Rarity
  commentId: T:DSLApp1.Model.Rarity
  parent: DSLApp1.Model
  href: DSLApp1.Model.Rarity.html
  name: Rarity
  nameWithType: Rarity
  fullName: DSLApp1.Model.Rarity
- uid: DSLApp1.Model.Fragment.Exclusivities*
  commentId: Overload:DSLApp1.Model.Fragment.Exclusivities
  href: DSLApp1.Model.Fragment.html#DSLApp1_Model_Fragment_Exclusivities
  name: Exclusivities
  nameWithType: Fragment.Exclusivities
  fullName: DSLApp1.Model.Fragment.Exclusivities
- uid: System.Collections.Generic.List{DSLApp1.Model.Exclusivity}
  commentId: T:System.Collections.Generic.List{DSLApp1.Model.Exclusivity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Exclusivity>
  nameWithType: List<Exclusivity>
  fullName: System.Collections.Generic.List<DSLApp1.Model.Exclusivity>
  nameWithType.vb: List(Of Exclusivity)
  fullName.vb: System.Collections.Generic.List(Of DSLApp1.Model.Exclusivity)
  name.vb: List(Of Exclusivity)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: DSLApp1.Model.Exclusivity
    name: Exclusivity
    href: DSLApp1.Model.Exclusivity.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: DSLApp1.Model.Exclusivity
    name: Exclusivity
    href: DSLApp1.Model.Exclusivity.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: DSLApp1.Model.Fragment.Equips*
  commentId: Overload:DSLApp1.Model.Fragment.Equips
  href: DSLApp1.Model.Fragment.html#DSLApp1_Model_Fragment_Equips
  name: Equips
  nameWithType: Fragment.Equips
  fullName: DSLApp1.Model.Fragment.Equips
- uid: System.Collections.Generic.List{DSLApp1.Model.IModifier}
  commentId: T:System.Collections.Generic.List{DSLApp1.Model.IModifier}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IModifier>
  nameWithType: List<IModifier>
  fullName: System.Collections.Generic.List<DSLApp1.Model.IModifier>
  nameWithType.vb: List(Of IModifier)
  fullName.vb: System.Collections.Generic.List(Of DSLApp1.Model.IModifier)
  name.vb: List(Of IModifier)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: DSLApp1.Model.IModifier
    name: IModifier
    href: DSLApp1.Model.IModifier.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: DSLApp1.Model.IModifier
    name: IModifier
    href: DSLApp1.Model.IModifier.html
  - name: )
- uid: DSLApp1.Model.Fragment.HasAbility*
  commentId: Overload:DSLApp1.Model.Fragment.HasAbility
  href: DSLApp1.Model.Fragment.html#DSLApp1_Model_Fragment_HasAbility
  name: HasAbility
  nameWithType: Fragment.HasAbility
  fullName: DSLApp1.Model.Fragment.HasAbility
- uid: DSLApp1.Model.Fragment.Ability*
  commentId: Overload:DSLApp1.Model.Fragment.Ability
  href: DSLApp1.Model.Fragment.html#DSLApp1_Model_Fragment_Ability
  name: Ability
  nameWithType: Fragment.Ability
  fullName: DSLApp1.Model.Fragment.Ability
- uid: DSLApp1.Model.IAbility
  commentId: T:DSLApp1.Model.IAbility
  parent: DSLApp1.Model
  href: DSLApp1.Model.IAbility.html
  name: IAbility
  nameWithType: IAbility
  fullName: DSLApp1.Model.IAbility
- uid: DSLApp1.Model.Fragment.#ctor*
  commentId: Overload:DSLApp1.Model.Fragment.#ctor
  href: DSLApp1.Model.Fragment.html#DSLApp1_Model_Fragment__ctor_System_String_System_String_System_String_System_String_System_String_System_String_System_String_System_String_System_String_System_String_System_String_System_String_System_String_System_String_System_String_System_String_System_String_
  name: Fragment
  nameWithType: Fragment.Fragment
  fullName: DSLApp1.Model.Fragment.Fragment
  nameWithType.vb: Fragment.New
  fullName.vb: DSLApp1.Model.Fragment.New
  name.vb: New
